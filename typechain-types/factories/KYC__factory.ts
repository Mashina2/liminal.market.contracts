/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { KYC, KYCInterface } from "../KYC";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "accountId",
        type: "string",
      },
    ],
    name: "AccountValidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getAccountId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "isValid",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "kycAccount",
    outputs: [
      {
        internalType: "string",
        name: "accountId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "validationDate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "accountId",
        type: "string",
      },
    ],
    name: "validateAccount",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610d6b8061007e6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d6578063a0ae7caf146100f1578063e0b490f714610114578063f2fde38b1461012757600080fd5b8063094c566c14610082578063715018a6146100ac5780638b1b925f146100b6575b600080fd5b610095610090366004610b04565b61013a565b6040516100a3929190610c9e565b60405180910390f35b6100b46101de565b005b6100c96100c4366004610b04565b610249565b6040516100a39190610c32565b6000546040516001600160a01b0390911681526020016100a3565b6101046100ff366004610b34565b6103e8565b60405190151581526020016100a3565b6100c9610122366004610b04565b610657565b6100b4610135366004610b04565b6107e8565b60016020526000908152604090208054819061015590610cc0565b80601f016020809104026020016040519081016040528092919081815260200182805461018190610cc0565b80156101ce5780601f106101a3576101008083540402835291602001916101ce565b820191906000526020600020905b8154815290600101906020018083116101b157829003601f168201915b5050505050908060010154905082565b6000546001600160a01b0316331461023d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61024760006108ca565b565b606073f39fd6e51aad88f6f4ce6ab8827279cfffb922666001600160a01b038316141561028f57604051806060016040528060248152602001610d126024913992915050565b6102cd6040518060400160405280601581526020017f4b594320697356616c69642069732063616c6c65640000000000000000000000815250610932565b6001600160a01b03821660009081526001602052604080822081518083019092528054829082906102fd90610cc0565b80601f016020809104026020016040519081016040528092919081815260200182805461032990610cc0565b80156103765780601f1061034b57610100808354040283529160200191610376565b820191906000526020600020905b81548152906001019060200180831161035957829003601f168201915b505050505081526020016001820154815250509050806000015151600014156103e15760405162461bcd60e51b815260206004820152601860248201527f41646472657373206973206e6f74204b59432076616c696400000000000000006044820152606401610234565b5192915050565b60006104286040518060400160405280601681526020017f56616c69646174654163636f756e742063616c6c656400000000000000000000815250610932565b81516024146104795760405162461bcd60e51b815260206004820152601c60248201527f4c6f6f6b73206c696b6520696e76616c6964206163636f756e744964000000006044820152606401610234565b60408051808201825283815242602080830191909152336000908152600182529290922081518051929391926104b29284920190610a6b565b50602082015181600101559050506104ff6040518060400160405280601581526020017f6164647265737320746f206b79634163636f756e7400000000000000000000008152503361098e565b61053e6040518060400160405280600981526020017f6163636f756e7449640000000000000000000000000000000000000000000000815250836109f0565b604080518082018252600a81527f6b79634163636f756e7400000000000000000000000000000000000000000000602080830191909152336000908152600190915291909120805461061892919061059590610cc0565b80601f01602080910402602001604051908101604052809291908181526020018280546105c190610cc0565b801561060e5780601f106105e35761010080835404028352916020019161060e565b820191906000526020600020905b8154815290600101906020018083116105f157829003601f168201915b50505050506109f0565b7f22bfe58e58301c85575d5a639c2c2a94a5c2edab18c748b6b95c43c5f9960f65826040516106479190610c32565b60405180910390a1506001919050565b60606106986040518060400160405280600c81526020017f75736572416464726573733a00000000000000000000000000000000000000008152508361098e565b6001600160a01b03821660009081526001602052604080822081518083019092528054829082906106c890610cc0565b80601f01602080910402602001604051908101604052809291908181526020018280546106f490610cc0565b80156107415780601f1061071657610100808354040283529160200191610741565b820191906000526020600020905b81548152906001019060200180831161072457829003601f168201915b5050505050815260200160018201548152505090506107996040518060400160405280600881526020017f6163636f756e743a00000000000000000000000000000000000000000000000081525082600001516109f0565b8051516103e15760405162461bcd60e51b815260206004820152601860248201527f41646472657373206973206e6f74204b59432076616c696400000000000000006044820152606401610234565b6000546001600160a01b031633146108425760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610234565b6001600160a01b0381166108be5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610234565b6108c7816108ca565b50565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108c7816040516024016109469190610c32565b60408051601f198184030181529190526020810180516001600160e01b03167f41304fac00000000000000000000000000000000000000000000000000000000179052610a4a565b6109ec82826040516024016109a4929190610c45565b60408051601f198184030181529190526020810180516001600160e01b03167f319af33300000000000000000000000000000000000000000000000000000000179052610a4a565b5050565b6109ec8282604051602401610a06929190610c70565b60408051601f198184030181529190526020810180516001600160e01b03167f4b5c4277000000000000000000000000000000000000000000000000000000001790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054610a7790610cc0565b90600052602060002090601f016020900481019282610a995760008555610adf565b82601f10610ab257805160ff1916838001178555610adf565b82800160010185558215610adf579182015b82811115610adf578251825591602001919060010190610ac4565b50610aeb929150610aef565b5090565b5b80821115610aeb5760008155600101610af0565b600060208284031215610b1657600080fd5b81356001600160a01b0381168114610b2d57600080fd5b9392505050565b600060208284031215610b4657600080fd5b813567ffffffffffffffff80821115610b5e57600080fd5b818401915084601f830112610b7257600080fd5b813581811115610b8457610b84610cfb565b604051601f8201601f19908116603f01168101908382118183101715610bac57610bac610cfb565b81604052828152876020848701011115610bc557600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000815180845260005b81811015610c0b57602081850181015186830182015201610bef565b81811115610c1d576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610b2d6020830184610be5565b604081526000610c586040830185610be5565b90506001600160a01b03831660208301529392505050565b604081526000610c836040830185610be5565b8281036020840152610c958185610be5565b95945050505050565b604081526000610cb16040830185610be5565b90508260208301529392505050565b600181811c90821680610cd457607f821691505b60208210811415610cf557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfe61656535343862322d623235302d343439632d386430622d393337623062383763636566a2646970667358221220428a4a0592d8e6762ea40ded5a3ecea25c9f413497bd88583ceba5c48014920b64736f6c63430008070033";

type KYCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KYCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KYC__factory extends ContractFactory {
  constructor(...args: KYCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KYC> {
    return super.deploy(overrides || {}) as Promise<KYC>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): KYC {
    return super.attach(address) as KYC;
  }
  connect(signer: Signer): KYC__factory {
    return super.connect(signer) as KYC__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KYCInterface {
    return new utils.Interface(_abi) as KYCInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): KYC {
    return new Contract(address, _abi, signerOrProvider) as KYC;
  }
}
