/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { KYC, KYCInterface } from "../KYC";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "accountAddress",
        type: "address",
      },
    ],
    name: "AccountInvalidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "accountId",
        type: "string",
      },
    ],
    name: "AccountValidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getAccountId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accountAddress",
        type: "address",
      },
    ],
    name: "invalidateAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "isValid",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "kycAccount",
    outputs: [
      {
        internalType: "string",
        name: "accountId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "validationDate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "accountId",
        type: "string",
      },
    ],
    name: "validateAccount",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060601b60805234801561001757600080fd5b5060805160601c611eaf61005260003960008181610378015281816104020152818161055d015281816105e201526106cc0152611eaf6000f3fe6080604052600436106100e85760003560e01c80638129fc1c1161008a57806397d3f2be1161005957806397d3f2be14610249578063a0ae7caf14610269578063e0b490f714610289578063f2fde38b146102a957600080fd5b80638129fc1c146101ca5780638456cb59146101df5780638b1b925f146101f45780638da5cb5b1461022157600080fd5b80634f1ef286116100c65780634f1ef2861461015b57806352d1902d1461016e5780635c975abb14610191578063715018a6146101b557600080fd5b8063094c566c146100ed5780633659cfe6146101245780633f4ba83a14610146575b600080fd5b3480156100f957600080fd5b5061010d610108366004611bfd565b6102c9565b60405161011b929190611d8f565b60405180910390f35b34801561013057600080fd5b5061014461013f366004611bfd565b61036d565b005b34801561015257600080fd5b506101446104ee565b610144610169366004611c18565b610552565b34801561017a57600080fd5b506101836106bf565b60405190815260200161011b565b34801561019d57600080fd5b5060335460ff165b604051901515815260200161011b565b3480156101c157600080fd5b50610144610784565b3480156101d657600080fd5b506101446107e8565b3480156101eb57600080fd5b506101446108c7565b34801561020057600080fd5b5061021461020f366004611bfd565b610929565b60405161011b9190611d2c565b34801561022d57600080fd5b506065546040516001600160a01b03909116815260200161011b565b34801561025557600080fd5b50610144610264366004611bfd565b610b0c565b34801561027557600080fd5b506101a5610284366004611c93565b610bd2565b34801561029557600080fd5b506102146102a4366004611bfd565b610e9d565b3480156102b557600080fd5b506101446102c4366004611bfd565b61102e565b60fb602052600090815260409020805481906102e490611ddd565b80601f016020809104026020016040519081016040528092919081815260200182805461031090611ddd565b801561035d5780601f106103325761010080835404028352916020019161035d565b820191906000526020600020905b81548152906001019060200180831161034057829003601f168201915b5050505050908060010154905082565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156104005760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661045b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146104c65760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b60648201526084016103f7565b6104cf8161110d565b604080516000808252602082019092526104eb91839190611170565b50565b6065546001600160a01b031633146105485760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103f7565b610550611324565b565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156105e05760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084016103f7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661063b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146106a65760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b60648201526084016103f7565b6106af8261110d565b6106bb82826001611170565b5050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461075f5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016103f7565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b6065546001600160a01b031633146107de5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103f7565b61055060006113c0565b600054610100900460ff166108035760005460ff1615610807565b303b155b6108795760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016103f7565b600054610100900460ff1615801561089b576000805461ffff19166101011790555b6108a361141f565b6108ab611492565b6108b3611505565b80156104eb576000805461ff001916905550565b6065546001600160a01b031633146109215760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103f7565b610550611570565b606073f39fd6e51aad88f6f4ce6ab8827279cfffb922666001600160a01b038316141561096f57604051806060016040528060248152602001611e566024913992915050565b7393da645082493bbd7116fc057c5b9adfd53639126001600160a01b03831614156109b357604051806060016040528060248152602001611e566024913992915050565b6109f16040518060400160405280601581526020017f4b594320697356616c69642069732063616c6c656400000000000000000000008152506115f8565b6001600160a01b038216600090815260fb60205260408082208151808301909252805482908290610a2190611ddd565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4d90611ddd565b8015610a9a5780601f10610a6f57610100808354040283529160200191610a9a565b820191906000526020600020905b815481529060010190602001808311610a7d57829003601f168201915b50505050508152602001600182015481525050905080600001515160001415610b055760405162461bcd60e51b815260206004820152601860248201527f41646472657373206973206e6f74204b59432076616c6964000000000000000060448201526064016103f7565b5192915050565b6065546001600160a01b03163314610b665760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103f7565b6001600160a01b038116600090815260fb6020526040812090610b898282611a9d565b506000600191909101556040516001600160a01b03821681527f81b5f6b3171c4a45c56498df6405815e9b8f677e0f06cb5eba743c8728e515ff9060200160405180910390a150565b6065546000906001600160a01b03163314610c2f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103f7565b610c6d6040518060400160405280601681526020017f56616c69646174654163636f756e742063616c6c6564000000000000000000008152506115f8565b8151602414610cbe5760405162461bcd60e51b815260206004820152601c60248201527f4c6f6f6b73206c696b6520696e76616c6964206163636f756e7449640000000060448201526064016103f7565b6040805180820182528381524260208083019190915233600090815260fb8252929092208151805192939192610cf79284920190611ad7565b5060208201518160010155905050610d446040518060400160405280601581526020017f6164647265737320746f206b79634163636f756e74000000000000000000000081525033611654565b610d836040518060400160405280600981526020017f6163636f756e7449640000000000000000000000000000000000000000000000815250836116b2565b604080518082018252600a81527f6b79634163636f756e740000000000000000000000000000000000000000000060208083019190915233600090815260fb909152919091208054610e5d929190610dda90611ddd565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0690611ddd565b8015610e535780601f10610e2857610100808354040283529160200191610e53565b820191906000526020600020905b815481529060010190602001808311610e3657829003601f168201915b50505050506116b2565b7f22bfe58e58301c85575d5a639c2c2a94a5c2edab18c748b6b95c43c5f9960f6582604051610e8c9190611d2c565b60405180910390a15060015b919050565b6060610ede6040518060400160405280600c81526020017f75736572416464726573733a000000000000000000000000000000000000000081525083611654565b6001600160a01b038216600090815260fb60205260408082208151808301909252805482908290610f0e90611ddd565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3a90611ddd565b8015610f875780601f10610f5c57610100808354040283529160200191610f87565b820191906000526020600020905b815481529060010190602001808311610f6a57829003601f168201915b505050505081526020016001820154815250509050610fdf6040518060400160405280600881526020017f6163636f756e743a00000000000000000000000000000000000000000000000081525082600001516116b2565b805151610b055760405162461bcd60e51b815260206004820152601860248201527f41646472657373206973206e6f74204b59432076616c6964000000000000000060448201526064016103f7565b6065546001600160a01b031633146110885760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103f7565b6001600160a01b0381166111045760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103f7565b6104eb816113c0565b6065546001600160a01b031633146111675760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103f7565b6104eb81611710565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156111a8576111a383611750565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156111e157600080fd5b505afa925050508015611211575060408051601f3d908101601f1916820190925261120e91810190611c7a565b60015b6112835760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f74205555505300000000000000000000000000000000000060648201526084016103f7565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146113185760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c6555554944000000000000000000000000000000000000000000000060648201526084016103f7565b506111a383838361181b565b60335460ff166113765760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016103f7565b6033805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b606580546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661148a5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016103f7565b610550611846565b600054610100900460ff166114fd5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016103f7565b6105506118bd565b600054610100900460ff166105505760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016103f7565b60335460ff16156115c35760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064016103f7565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113a33390565b6104eb8160405160240161160c9190611d2c565b60408051601f198184030181529190526020810180516001600160e01b03167f41304fac00000000000000000000000000000000000000000000000000000000179052611931565b6106bb828260405160240161166a929190611d3f565b60408051601f198184030181529190526020810180516001600160e01b03167f319af33300000000000000000000000000000000000000000000000000000000179052611931565b6106bb82826040516024016116c8929190611d6a565b60408051601f198184030181529190526020810180516001600160e01b03167f4b5c427700000000000000000000000000000000000000000000000000000000179052611931565b61171981611750565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6001600160a01b0381163b6117cd5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e74726163740000000000000000000000000000000000000060648201526084016103f7565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b61182483611710565b6000825111806118315750805b156111a3576118408383611952565b50505050565b600054610100900460ff166118b15760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016103f7565b6033805460ff19169055565b600054610100900460ff166119285760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016103f7565b610550336113c0565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60606001600160a01b0383163b6119d15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e7472616374000000000000000000000000000000000000000000000000000060648201526084016103f7565b600080846001600160a01b0316846040516119ec9190611d10565b600060405180830381855af49150503d8060008114611a27576040519150601f19603f3d011682016040523d82523d6000602084013e611a2c565b606091505b5091509150611a548282604051806060016040528060278152602001611e2f60279139611a5d565b95945050505050565b60608315611a6c575081611a96565b825115611a7c5782518084602001fd5b8160405162461bcd60e51b81526004016103f79190611d2c565b9392505050565b508054611aa990611ddd565b6000825580601f10611ab9575050565b601f0160209004906000526020600020908101906104eb9190611b5b565b828054611ae390611ddd565b90600052602060002090601f016020900481019282611b055760008555611b4b565b82601f10611b1e57805160ff1916838001178555611b4b565b82800160010185558215611b4b579182015b82811115611b4b578251825591602001919060010190611b30565b50611b57929150611b5b565b5090565b5b80821115611b575760008155600101611b5c565b600067ffffffffffffffff80841115611b8b57611b8b611e18565b604051601f8501601f19908116603f01168101908282118183101715611bb357611bb3611e18565b81604052809350858152868686011115611bcc57600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b0381168114610e9857600080fd5b600060208284031215611c0f57600080fd5b611a9682611be6565b60008060408385031215611c2b57600080fd5b611c3483611be6565b9150602083013567ffffffffffffffff811115611c5057600080fd5b8301601f81018513611c6157600080fd5b611c7085823560208401611b70565b9150509250929050565b600060208284031215611c8c57600080fd5b5051919050565b600060208284031215611ca557600080fd5b813567ffffffffffffffff811115611cbc57600080fd5b8201601f81018413611ccd57600080fd5b611cdc84823560208401611b70565b949350505050565b60008151808452611cfc816020860160208601611db1565b601f01601f19169290920160200192915050565b60008251611d22818460208701611db1565b9190910192915050565b602081526000611a966020830184611ce4565b604081526000611d526040830185611ce4565b90506001600160a01b03831660208301529392505050565b604081526000611d7d6040830185611ce4565b8281036020840152611a548185611ce4565b604081526000611da26040830185611ce4565b90508260208301529392505050565b60005b83811015611dcc578181015183820152602001611db4565b838111156118405750506000910152565b600181811c90821680611df157607f821691505b60208210811415611e1257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c656461656535343862322d623235302d343439632d386430622d393337623062383763636566a2646970667358221220a5b54b2278d6fb2a8d7b590da98d73c1fd9261ce33ce4b7c8100086a31b1037e64736f6c63430008070033";

type KYCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KYCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KYC__factory extends ContractFactory {
  constructor(...args: KYCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KYC> {
    return super.deploy(overrides || {}) as Promise<KYC>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): KYC {
    return super.attach(address) as KYC;
  }
  connect(signer: Signer): KYC__factory {
    return super.connect(signer) as KYC__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KYCInterface {
    return new utils.Interface(_abi) as KYCInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): KYC {
    return new Contract(address, _abi, signerOrProvider) as KYC;
  }
}
